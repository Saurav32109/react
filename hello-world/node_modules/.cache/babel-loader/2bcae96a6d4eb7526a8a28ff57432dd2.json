{"ast":null,"code":"var _jsxFileName = \"/home/anonymous/react/hello-world/react/hello-world/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals'; //1.// const name='saurav kumar gupta';//declaring a variable\n// const element=<h1>Hello,{name}</h1>;//Embedded expression using jsx\n// ReactDOM.render(\n//   <h1>Hello, world</h1>,\n//   document.getElementById('root')\n// );\n//2.// function formatuser(user){//this function describes how we can use javascript function\n//   return user.firstName+' '+user.lastName;\n// }\n// const user={ //wrapping this in parenthesis for avoiding the pitfalls of automatic semicolon insertion\n//   firstName:'saurav',\n//   lastName:'gupta'\n// };\n// const element=(\n//   <h1>Hello, {formatuser(user)}</h1>\n// );\n// ReactDOM.render(\n//   element,\n//   document.getElementById('root')\n// );\n//jsx in an expression too\n//getting error in this\n// function formatuser(user)\n// {\n//   return user.firstName +' '+user.lastName;\n// }\n// const user={\n//   firstName:\"saurav\",\n//   lastName:\"gupta\"\n// };\n// function getGreeting(user){\n//   if(user){\n//     return <h1>Hello,{formatuser(user)}!</h1>\n//   }\n//   return <h1>Hello, stranger.</h1>\n// }\n// const element= (\n//   <h1>Hello, {getGreeting(user)}! </h1>\n// );\n// ReactDOM.render()\n// (\n//   element,\n//   document.getElementById('root')\n// );\n//3.//Rendering elements\n//<div> id=\"root\"</div> this is a root DOM node\n//to render a react  element into root DOM node we pass both to ReactDOM.render():\n//const element=<h1>Hello, saurav how have you been</h1>;\n//ReactDOM.render(element,document.getElementById('root'));\n//updating the rendered elements:since reacts elements are immutable it's not possible for us ot change the attributes of it's children,the only way to update ui is to create a new element, and pass it to ReactDOM.render().\n//example:ticking clock\n// function tick()\n// {\n//   const element=(\n//     <div>\n//       <h1>Hey saurav!</h1>\n//       <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//   );\n//   ReactDOM.render(element,document.getElementById('root'));\n// }\n// setInterval(tick,2000);\n//It calls ReactDOM.render() every two second from setInterval() callback.\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//4//components and props\n//function and class components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction welcome(props) //props is an arbitrary input\n{\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello, \", props.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n}\n\nreportWebVitals();","map":{"version":3,"sources":["/home/anonymous/react/hello-world/react/hello-world/src/index.js"],"names":["React","ReactDOM","reportWebVitals","welcome","props","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAQA;AACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACvB;AACE,sBAAO;AAAA,0BAAYA,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACDH,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n//1.// const name='saurav kumar gupta';//declaring a variable\n// const element=<h1>Hello,{name}</h1>;//Embedded expression using jsx\n// ReactDOM.render(\n//   <h1>Hello, world</h1>,\n//   document.getElementById('root')\n// );\n\n\n\n//2.// function formatuser(user){//this function describes how we can use javascript function\n//   return user.firstName+' '+user.lastName;\n// }\n// const user={ //wrapping this in parenthesis for avoiding the pitfalls of automatic semicolon insertion\n//   firstName:'saurav',\n//   lastName:'gupta'\n// };\n// const element=(\n//   <h1>Hello, {formatuser(user)}</h1>\n// );\n// ReactDOM.render(\n//   element,\n//   document.getElementById('root')\n// );\n\n\n//jsx in an expression too\n//getting error in this\n// function formatuser(user)\n// {\n//   return user.firstName +' '+user.lastName;\n// }\n// const user={\n//   firstName:\"saurav\",\n//   lastName:\"gupta\"\n// };\n// function getGreeting(user){\n//   if(user){\n//     return <h1>Hello,{formatuser(user)}!</h1>\n//   }\n//   return <h1>Hello, stranger.</h1>\n// }\n// const element= (\n//   <h1>Hello, {getGreeting(user)}! </h1>\n// );\n// ReactDOM.render()\n// (\n//   element,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n//3.//Rendering elements\n\n//<div> id=\"root\"</div> this is a root DOM node\n//to render a react  element into root DOM node we pass both to ReactDOM.render():\n//const element=<h1>Hello, saurav how have you been</h1>;\n//ReactDOM.render(element,document.getElementById('root'));\n\n\n//updating the rendered elements:since reacts elements are immutable it's not possible for us ot change the attributes of it's children,the only way to update ui is to create a new element, and pass it to ReactDOM.render().\n//example:ticking clock\n// function tick()\n// {\n//   const element=(\n//     <div>\n//       <h1>Hey saurav!</h1>\n//       <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//   );\n//   ReactDOM.render(element,document.getElementById('root'));\n// }\n// setInterval(tick,2000);\n//It calls ReactDOM.render() every two second from setInterval() callback.\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n\n\n\n\n\n//4//components and props\n//function and class components\nfunction welcome(props)//props is an arbitrary input\n{\n  return <h1>Hello, {props.name}</h1>\n}\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}